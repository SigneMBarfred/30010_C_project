#include "stm32f30x_conf.h" // STM32 config
#include "30010_io.h" 		// Input/output library for this course

#include <stdint.h>
#include <stdio.h>
#include <unistd.h>
#include "project.h"
#define ESC 0x1B
#include "ansi.h" //include ANSI escape codes and function
#include "stdlib.h"
#include "ball.h"
#include <string.h> //for the draw window function
#include "bosskey.h"





int main()
{
	uart_init(115200);
	uint16_t a;
	setupJoystickPins();
	setupLEDPins();

	configureADC();

	//BALL:
	//define a ball
	vector_t Ball;
	Ball.pos_x = 10 << 14; //bitshift so we get 2.14 not 32.0
	Ball.pos_y = 10 << 14; //bitshift
	Ball.v_x = 0;//1 << 14;
	Ball.v_y = 0;//1 << 14;
	clrscrn();
	resetFormat(); //undoes whatever formatting was activated so that next run is "normal"
	//make window that fits terminal
	window(2, 2, 140, 40, "double", "|Ex. 4 - WINDOW|");
	//printf("Start position of ball: (%d, %d)\n", Ball.pos_x >> 14, Ball.pos_y >> 14);
	//printf("velocity: (%d, %d)\n", Ball.v_x >> 14, Ball.v_y >> 14);
	// Update the ball using the function
	ballUpdate(&Ball);
	//printf("updated position of ball: (%d, %d)\n", Ball.pos_x >> 14, Ball.pos_y >> 14);
	//draw ball
	drawBall(&Ball);
	static int count = 0;
	//now, we will delete the ball each time we wish to print it in a new position. this is accomplished in below while loop

	//make box inside window
	box(60, 18, 80, 23, "simple","Hit Count");
	//update counter

	int p = 0;
	int p_p = 0;
	int a_p = 0;

	while(1){
		a = readJoy();

		if(a_p != a){
			if ((p_p == 1) && (a == 64)){
				p = 0;
			}
			else if((a == 64) && (p_p == 0)){
				p = 1;
			}
		}
		a_p = a;
		p_p = p;

		//printf("%d %d %d", p, p_p, a_p);
		//printf("%d", p_p);

		if(p == 1){
			//clrscrn();
			if(a_p == 64){
				clrscrn();
			}
			bosskey();

		} else{
			if(a_p == 64){
				clrscrn();
				window(2, 2, 140, 40, "double", "|Ex. 4 - WINDOW|");
			}
			//clrscrn_once();
			setdir(&Ball);
			potf(&Ball);
			//printf("%d\n ", a);
			setLED(a);

			drawBall(&Ball);
			ballUpdate(&Ball); //updates ball, velocity and count

			for (int i = 0; i < 150000; ++i) { //delay so the ball moves at slower speed
				asm("nop"); //no operation instruction on assembly level
			}

			printf("%c",127); //ansi code to delete the ball
			printf("%c[H", ESC); //home cursor

			box(60, 18, 80, 23, "simple","Hit Count:\n");
			gotoxy(70,21);
			printf("%d",ballUpdate(&Ball));
		}
	}
}
